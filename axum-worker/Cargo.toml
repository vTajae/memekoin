[package]
name = "www-example-com-api"
version = "0.1.0"
edition = "2024"
authors = [ "shellsort <cl.mertig@gmail.com>" ]

[package.metadata.release]
release = false

# https://github.com/rustwasm/wasm-pack/issues/1247
[package.metadata.wasm-pack.profile.release]
wasm-opt = false

[lib]
crate-type = ["cdylib"]

[dependencies]
tracing-web = "0.1"
tracing-subscriber = { version = "0.3", features=['time', 'json'] }
worker = { version="0.6.1", features=['http', 'axum', 'tokio-postgres'] }
worker-macros = { version="0.6.1", features=['http'] }
axum  = { version = "0.8.4", default-features = false, features = ["json", "query", "macros"] }
tower-service = "0.3.3"
async-trait = "0.1.88"

# WASM-compatible session management - manual cookie approach
# Remove complex dependencies, use simple header-based cookies
# time = "0.3.41" - removed to avoid WASM issues
# tower-cookies = "0.11.0"
# axum-sessions = "0.6.1"

console_error_panic_hook = { version = "0.1.7" }
wasm-bindgen = "0.2.100"

# Phase 1: Simplified dependencies - removing chrono, uuid, tokio-postgres to fix getrandom issues
# Time handling for timestamps
chrono = { version = "0.4.41", features = ["serde", "js-sys"] }

# Logging dependencies (WASM-compatible)
tracing = "0.1.41"
tracing-wasm = "0.2.1"

# Database dependencies - WASM-compatible tokio-postgres with "js" feature (no mio dependency)
tokio-postgres = { version = "0.7.13", default-features = false, features = ["js", "with-uuid-1", "with-chrono-0_4", "with-serde_json-1"] }
wasm-bindgen-futures = "0.4.50"

# Futures for async handling (WASM-compatible)
futures = "0.3.31"
tokio = { version = "1.47.1", default-features = false, features = ["macros", "rt", "sync", "time"] }

# Axum-Cloudflare adapter for Send compatibility
axum-cloudflare-adapter = "0.14.0"


# Axum web framework for powerful routing and middleware (WASM-compatible)
tower = { version = "0.5.2", default-features = false, features = ["util"] }

# JSON serialization/deserialization
serde = { version = "1.0.219", features = ["derive"] }
serde_json = "1.0.142"

# Phase 1: Removing UUID to fix getrandom conflicts
# UUID generation for sessions and users
 uuid = { version = "1.17.0", features = ["v4", "js", "serde"] }

# Base64 encoding for OAuth PKCE
 base64 = "0.22.1"

# Regex for pattern matching
regex = "1.11.0"

# URL parsing and validation
 url = "2.5.4"

# Phase 1: Commenting out complex dependencies causing WASM issues

# Random number generation for security  
getrandom = { version = "0.2", features = ["js"] }


# URL encoding for OAuth parameters
urlencoding = "2.1.3"

# Direct web API access for real Google OAuth calls
web-sys = { version = "0.3", features = ["Request", "RequestInit", "RequestMode", "Response", "Headers", "Window"] }
js-sys = "0.3"
serde-wasm-bindgen = "0.6"

# HTTP client for WASM
reqwest = { version = "0.12", default-features = false, features = ["json"] }

# Cryptographic dependencies (WASM-compatible)
rand = { version = "0.8.5", features = ["getrandom"] }
sha2 = "0.10.8"
bcrypt = "0.15.0"
pbkdf2 = "0.12.2"
hmac = "0.12.1"


